apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    io.kompose.service: server
  name: server
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: server
  strategy: {}
  template:
    metadata:
      labels:
        io.kompose.network/hive: "true"
        io.kompose.service: server
    spec:
      containers:
        - env:
            - name: AUTH_ORGANIZATION_OIDC
              value: {{ .Values.AUTH_ORGANIZATION_OIDC | quote }}
            - name: CDN_API
              value: "1"
            - name: CDN_API_BASE_URL
              value: http://server.hive.svc:8082 # TODO: PERZ-269 check if that works
            - name: CDN_AUTH_PRIVATE_KEY
              value: {{ .Values.CDN_AUTH_PRIVATE_KEY }}
            - name: CLICKHOUSE_HOST
              value: clickhouse.hive.svc
            - name: CLICKHOUSE_PASSWORD
              value: {{ .Values.CLICKHOUSE_PASSWORD }}
            - name: CLICKHOUSE_PORT
              value: "8123" # TODO: PERZ-269 get from values
            - name: CLICKHOUSE_PROTOCOL
              value: http
            - name: CLICKHOUSE_USERNAME
              value: {{ .Values.CLICKHOUSE_USER }}
            - name: EMAILS_ENDPOINT
              value: http://emails.hive.svc:3011
            - name: ENCRYPTION_SECRET
              value: {{ .Values.HIVE_ENCRYPTION_SECRET }}
            - name: NODE_ENV
              value: production
            - name: PORT
              value: "3001" # TODO: PERZ-269 get from values
            - name: POSTGRES_DB
              value: {{ .Values.POSTGRES_DB }}
            - name: POSTGRES_HOST
              value: db.hive.svc
            - name: POSTGRES_PASSWORD
              value: {{ .Values.POSTGRES_PASSWORD }}
            - name: POSTGRES_PORT
              value: "5432" # TODO: PERZ-269 get from values
            - name: POSTGRES_USER
              value: {{ .Values.POSTGRES_USER }}
            - name: REDIS_HOST
              value: redis.hive.svc # TODO: PERZ-269 template mit namespace und service name
            - name: REDIS_PASSWORD
              value: {{ .Values.REDIS_PASSWORD }}
            - name: REDIS_PORT
              value: "6379" # TODO: PERZ-269 get from values
            - name: S3_ACCESS_KEY_ID
              value: {{ .Values.MINIO_ROOT_USER }}
            - name: S3_BUCKET_NAME
              value: artifacts
            - name: S3_ENDPOINT
              value: http://s3.hive.svc:9000
            - name: S3_PUBLIC_URL
              value: http://s3-reverse-proxy.hive.svc:8083
            - name: S3_SECRET_ACCESS_KEY
              value: {{ .Values.MINIO_ROOT_PASSWORD}}
            - name: SCHEMA_ENDPOINT
              value: http://schema.hive.svc:3002
            - name: SUPERTOKENS_API_KEY
              value: {{ .Values.SUPERTOKENS_API_KEY }}
            - name: SUPERTOKENS_CONNECTION_URI
              value: http://supertokens.hive.svc:3567
            - name: TOKENS_ENDPOINT
              value: http://tokens.hive.svc:3003
            - name: WEBHOOKS_ENDPOINT
              value: http://webhooks.hive.svc:3005
            - name: WEB_APP_URL
              value: {{ .Values.HIVE_APP_BASE_URL }}
          image: {{ .Values.DOCKER_REGISTRY }}server{{ .Values.DOCKER_TAG }}
          name: server
          ports:
            - containerPort: 3001
          resources: {}
      restartPolicy: Always
status: {}
