apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert --out k8s
    kompose.version: 1.28.0 (c4137012e)
  creationTimestamp: null
  labels:
    io.kompose.service: db
  name: db
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: db
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert --out k8s
        kompose.version: 1.28.0 (c4137012e)
      creationTimestamp: null
      labels:
        io.kompose.network/hive: "true"
        io.kompose.service: db
    spec:
      containers:
        - env:
            - name: PGDATA
              value: /var/lib/postgresql/data
            - name: POSTGRES_DB
              value: {{ .Values.POSTGRES_DB }}
            - name: POSTGRES_PASSWORD
              value: {{ .Values.POSTGRES_PASSWORD }}
            - name: POSTGRES_USER
              value: {{ .Values.POSTGRES_USER }}
          image: postgres:14.6-alpine
          livenessProbe:
            exec:
              # TODO: PERZ-269 check if env vars correctly resolved
              command:
                - pg_isready -d {{ .Values.POSTGRES_DB | quote }} -U {{ .Values.POSTGRES_USER | quote  }}
            failureThreshold: 6
            periodSeconds: 5
            timeoutSeconds: 5
          name: db
          resources: {}
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: db-claim0
      restartPolicy: Always
      volumes:
        - name: db-claim0
          persistentVolumeClaim:
            claimName: db-claim0
status: {}
